<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <standardValues>
      <providers>
        <add name="fallback">
          <!-- overwrite the basic cache with a cache that clears child entries -->
          <Cache type="FieldFallback.Caching.FallbackValuesCache, FieldFallback.Kernel">
            <patch:attribute name="type">FieldFallback.Processors.Caching.FallbackValuesCache, FieldFallback.Processors</patch:attribute>
            <param name="sizeString" desc="cache size">10MB</param>
            <param name="clearChildren" desc="clear children">true</param>
            <!-- If 'true' when an item is saved, all child entries will be cleared as well. Required if using ancestor fallback. -->
          </Cache>

        </add>
      </providers>
    </standardValues>

    <!-- Wire up the fallback processors in this project -->
    <pipelines>
      <fieldFallback>
        <!-- Description:
                A field's value should default to the value set on a field on a
                  Default Item  in a Defaults Folder in the Content tree
                ** In order to use this type of Fallback, you will have to enable
                   the config file FieldFallbackDefaults_00.config.example. You 
                   will also need to configure each setting in the config file. 
                    Usage:
                        On the Default Item that was auto-created, each field can
                        have Standard Values inherited from the Template or Fallback Values
                        that you would set in the auto-created item.
                        * To leverage the Fallback values, create items based on the template
                          that the auto-created item uses. The Item you created will use the 
                          DefaultValuesItemProcessor and set the field value based off of the
                          Fallback Value or Standard Value. NOTE: Fallback Values take priority
                          over Standard Values
                -->
                <processor type="FieldFallback.Processors.DefaultValuesItemProcessor, FieldFallback.Processors" />
        
        <!-- Description:
                A field's value should default to the nearest set ancestor that has the same field 
                    Usage:
                        Each field definition has a "EnableAncestorFallback" field. Set to 'true'.
                -->
        <!--
                <processor type="FieldFallback.Processors.AncestorFallbackProcessor, FieldFallback.Processors" />
                -->

        <!-- Description:
                A field's value should default to a different field in the same item. 
                ** In order to use this type of fallback, the template must derive from the 
                   '/sitecore/templates/System/Templates/Fallback template' template rather than the 
                   '/sitecore/templates/System/Templates/Standard template'
                    Usage:
                        On the standard value (or the actual item) there is a "Fallback Fields" field within a "Fallback" section.
                        This is a single line text field that may be formatted as a Name/Value pair or XML.
                        Configure the 'name' part with the name of the field that should have fallback
                        Configure the 'value' part with the '|' separated list of fields it should check for a value
                        
                        Name/Value pair - Name=Value1|Value2&Name2=Value3
                        
                        XML -
                          <fallback>
                            <setting target="{id}" source="{id}|{id}|{id}..." enableEllipsis="true|false" clipAt="{number chars}" />
                            <setting target="{id}" source="{id}|{id}|{id}..." enableEllipsis="true|false" clipAt="{number chars}" />
                              ...
                          </fallback>                        
                    
                  EnableNestedFallback - In certain scenarios a field may be configured with multiple fallback processors. 
                                              For instance, AncestorFallback. Should the Ancestor value be determined before translation happens?
                -->
        <!--
                <processor type="FieldFallback.Processors.LateralFieldFallbackProcessor, FieldFallback.Processors">
                    <EnableNestedFallback>true</EnableNestedFallback>
                </processor>
                -->

        <!-- Description:
                A field's value should default to a 'default' value. This default value can be a token that is transformed at render time.
                    Usage:
                        Each field definition has a "DefaultFieldFallback" field. Set it to the value, or token, you want to render as a fallback
                -->
        <!-- 
                <processor type="FieldFallback.Processors.DefaultFieldFallbackProcessor, FieldFallback.Processors" />
                -->
      </fieldFallback>
    </pipelines>

    <settings>
      <!-- Pipe separated list of field IDs that will be ignored during the fallback process 
           Example: {GUID}|{GUID}
           Default value: empty
           
           {8A826BE2-C878-49DA-A0F7-32DB6718E2FB} /sitecore/templates/System/Templates/Sections/Fallback/Fallback/__FallbackFields
            -->
      <setting name="Fallback.IgnoredFields" value="{8A826BE2-C878-49DA-A0F7-32DB6718E2FB}" />
    
     </settings>

  </sitecore>
</configuration>
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
    <sitecore>

        <databases>
            <!-- Custom GetItemCommand in order to support the "Enforcing of Version Presence" functionality -->
            <database id="master" singleInstance="true" type="Sitecore.Data.Database, Sitecore.Kernel">
                <Engines.DataEngine.Commands.GetItemPrototype>
                    <obj type="FieldFallback.Processors.Globalization.DataEngine.GetItemCommand,  FieldFallback.Processors.Globalization" />
                </Engines.DataEngine.Commands.GetItemPrototype>
            </database>
            <database id="web" singleInstance="true" type="Sitecore.Data.Database, Sitecore.Kernel">
                <Engines.DataEngine.Commands.GetItemPrototype>
                    <obj type="FieldFallback.Processors.Globalization.DataEngine.GetItemCommand,  FieldFallback.Processors.Globalization" />
                </Engines.DataEngine.Commands.GetItemPrototype>
            </database>
        </databases>

        <!-- add in the language fallback processor as the first fallback processor -->
        <pipelines>
            <fieldFallback>

                <!--    Description:
                            The field is translated from the value on the 'masterLanguageName' version to the current language.
                            The text can only be translated to one of the listed 'supportedLanguages' 
                            TranslationService is an implementation of the `FieldFallback.Processors.Translation.ITranslationService, FieldFallback.Processors.Globalization` interface. 
                                There is an implementation provided that uses the Microsoft/Azure Translation Service. https://datamarket.azure.com/dataset/bing/microsofttranslator
                                    * Please input your account key 
                            EnableNestedFallback - In certain scenarios a field may be configured with multiple fallback processors. 
                                                      For instance, AncestorFallback. Should the Ancestor value be determined before translation happens?
                
                        Usage:
                            Each field definition has an "EnableTranslation" field. Set to 'true'.
                
                -->
                <!--
                <processor type="FieldFallback.Processors.TranslationProcessor, FieldFallback.Processors.Globalization">
                    <param name="masterLanguageName" desc="The character code for the master language that is the source of all translation">en</param>
                    <param name="supportedLanguages" desc="The list of languages that can be translated">ar,bg,ca,cs,da,de,el,en,es,et,fa,fi,fr,he,hi,ht,hu,id,it,ja,ko,lt,lv,ms,mww,nl,no,pl,pt,ro,ru,sk,sl,sv,th,tr,uk,ur,vi,zh-CHS,zh-CHT</param>
                    <EnableNestedFallback>true</EnableNestedFallback>
                    <TranslationService type="FieldFallback.Processors.Translation.MicrosoftTranslator, FieldFallback.Processors.Globalization">
                        <param name="accountKey" desc="The Account Key for the Microsoft Translation service">** YOUR KEY HERE **</param>
                    </TranslationService>
                </processor>
                -->
                
                <!--
                
                -->
                <!--
                <processor patch:before="*[1]"
                  type="FieldFallback.Processors.Globalization.PartialLanguageFallbackProcessor, FieldFallback.Processors.Globalization">
                    <EnableNestedFallback>true</EnableNestedFallback>
                </processor>
                -->
            </fieldFallback>
        </pipelines>

        <sites>
            <site name="website">
                <patch:attribute name="enforceVersionPresence">true</patch:attribute>
            </site>
        </sites>

        <settings>
            <!--
	           Regisered Sitecore language to be used for enforcing language fallback, i.e. 'master' language
	           It is VERY important NOT to have this language to fallback to any other language on the item definition
	
	           The value could be different depending on a locale. For US, that would be 'en' or 'en-US' for example
	           If 'enforcing from master language' feature is enabled, this language will be used as a source language.
	
	           Default value: en
	        -->
            <setting name="Fallback.MasterLanguage" value="en" />


            <!-- Pipe separated list of template GUIDs that support "Enforcing of Version Presence" functionality
           Default value: empty
            -->
            <setting name="Fallback.EnforceVersionPresenceTemplates" value="" />
        </settings>
    </sitecore>
</configuration>